name: Build ImmortalWrt

on:
  # 支持手动触发
  workflow_dispatch:
  
  # 支持定时触发，每天凌晨2点触发
  schedule:
    - cron: '0 2 * * *'

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v3

      # 安装必要的依赖
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libncurses5-dev gawk git gettext unzip file wget python3 python3-pip libssl-dev

      # 查找并挂载大容量目录到编译目录
      - name: Mount large directory to build directory
        run: |
          # 创建编译目录
          mkdir -p ~/build

          # 检查 /dev/shm 是否有足够的空间
          if [ $(df /dev/shm | awk 'NR==2 {print $4}') -gt 10000000 ]; then
            echo "Using /dev/shm as the build directory"
            sudo mount --bind /dev/shm ~/build
          else
            # 如果 /dev/shm 不够大，尝试使用 /mnt
            echo "Using /mnt as the build directory"
            sudo mount --bind /mnt ~/build
          fi

      # 复制 .config 文件到编译目录
      - name: Copy .config file
        run: |
          cp .config ~/build/.config

      # 克隆 immortalwrt 源码
      - name: Clone ImmortalWrt source
        run: |
          git clone https://github.com/immortalwrt/immortalwrt.git ~/build/immortalwrt
          cd ~/build/immortalwrt
          git checkout master

      # 编译 immortalwrt
      - name: Build ImmortalWrt
        run: |
          cd ~/build/immortalwrt
          cp ~/build/.config .config
          make defconfig
          make download -j$(nproc)
          make -j$(nproc)

      # 将编译结果复制到 Release 目录
      - name: Copy build artifacts to release directory
        run: |
          mkdir -p ~/release
          cp -r ~/build/immortalwrt/bin/targets/* ~/release/

      # 创建 Release 并上传固件
      - name: Create Release and upload firmware
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.run_number }}
          files: |
            ~/release/*.bin
            ~/release/*.img
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 卸载挂载的目录
      - name: Unmount large directory
        run: |
          sudo umount ~/build
